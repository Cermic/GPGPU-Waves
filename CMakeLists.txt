cmake_minimum_required(VERSION 3.8 FATAL_ERROR)
set(CMAKE_CXX_STANDARD 11)
project(wave LANGUAGES CXX CUDA)

function(check_env var)
if (NOT DEFINED ${var})
  if (DEFINED ENV{${var}})
    set(${var} $ENV{${var}} CACHE PATH "Location of ${var}")
  else()
    message(SEND_ERROR "${var} is NOT defined")
    set(${var} ""           CACHE PATH "Location of ${var}")
  endif()
endif()
endfunction(check_env)

if (MSVC)
  if (CMAKE_SIZEOF_VOID_P EQUAL 4)
    message(SEND_ERROR "Please build for 64-bit MSVS.")
  endif ()
  check_env(GLUT_ROOT)
  check_env(GLEW_ROOT)
  include_directories(${GLUT_ROOT}/include)
  include_directories(${GLEW_ROOT}/include)
  link_directories(${GLUT_ROOT}/lib)
  link_directories(${GLEW_ROOT}/lib/Release/x64)
endif (MSVC)

check_env(NVCUDASAMPLES_ROOT)
include_directories(${NVCUDASAMPLES_ROOT}/common/inc)

add_executable(wave wave.cu)
if (MSVC)
set_property(DIRECTORY PROPERTY VS_STARTUP_PROJECT wave)
set_target_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS "/ignore:4099")
#target_link_libraries(wave debug     glew32s.lib)
#target_link_libraries(wave debug     freeglut_staticd.lib)
#target_link_libraries(wave optimized glew32s.lib)
#target_link_libraries(wave optimized freeglut_static.lib)
target_link_libraries(wave debug     freeglut_staticd.lib glew32s.lib)
target_link_libraries(wave optimized freeglut_static.lib  glew32s.lib)
else(MSVC)
target_link_libraries(wave -lglut -lGL -lGLU -lGLEW)
endif (MSVC)

